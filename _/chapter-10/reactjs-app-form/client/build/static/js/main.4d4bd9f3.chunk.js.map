{"version":3,"sources":["logo.svg","validation.js","constants.js","CustomerDetails.js","Customers.js","CustomerNew.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","validateEmail","val","test","CONSTANTS","API_ROOT","CustomerDetails","props","state","validate","email","emailRef","React","createRef","handleChange","bind","delete","this","getCustomerDetails","prevProps","customerDetails","data","prop","setState","id","axios","get","then","response","current","event","details","target","name","value","post","handler","update","el","properties","className","Card","CardHeader","CardTitle","CardBody","Form","FormGroup","Label","Input","type","onChange","valid","invalid","ref","phone","city","country","organization","jobProfile","additionalInfo","Button","onClick","Component","uuidv4","require","Customers","getCustomerData","initial","customerID","customerList","length","selectedCustomer","map","customer","key","CustomerNew","console","log","emailState","onBlur","href","App","basename","process","src","logo","alt","Switch","Route","exact","path","render","Redirect","to","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","document","getElementById","URL","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.4d4bd9f3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const validateEmail = (val) => {\n  const emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  if (emailRex.test(val)) {\n    return true;\n  } \n  return false;\n}\n\nmodule.exports = {\n  validateEmail: validateEmail,\n}","const CONSTANTS = {\n    //API_ROOT: \"http://localhost:5000\"\n    API_ROOT: \"\"\n}\n\nexport default CONSTANTS","import React, { Component } from 'react'\nimport { Card, CardHeader, CardTitle, CardBody, Form, FormGroup, Label, Input, Button } from \"reactstrap\"\nimport CONSTANTS from \"./constants\"\nimport { validateEmail } from \"./validation\"\nimport axios from 'axios'\n\n//This Component is a child Component of Customers Component\nexport default class CustomerDetails extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      validate: {\n        email: false\n      }\n    }\n\n    this.emailRef = React.createRef()\n\n    this.handleChange = this.handleChange.bind(this)\n    this.delete = this.delete.bind(this)\n    this.validate = this.validate.bind(this)\n  }\n\n  //Function which is called when the component loads for the first time\n  componentDidMount() {\n    this.getCustomerDetails(this.props.val)\n\n  }\n\n  //Function which is called whenver the component is updated\n  componentDidUpdate(prevProps) {\n    //get Customer Details only if props has changed\n    if (this.props.val !== prevProps.val) {\n      // clear the current values\n      if (this.state.customerDetails) {\n        const state = this.state.customerDetails.data;\n\n        for (const prop in state) {\n          state[prop] = ''\n        }\n\n        this.setState({\n          customerDetails: {\n            data: state\n          }\n        })\n      }\n      \n      this.getCustomerDetails(this.props.val)\n    }\n  }\n\n  //Function to Load the customerdetails data from json.\n  getCustomerDetails(id) {\n    axios.get(`${CONSTANTS.API_ROOT}/api/get/` + id).then(response => {\n      if (!response.data.id) {\n        response.data.id = id\n      }\n      this.setState({ customerDetails: response })\n      this.validate(this.emailRef.current)\n    })\n  }\n\n  handleChange(event) {\n    const details = this.state.customerDetails\n    details.data[event.target.name] = event.target.value\n    this.validate(event.target)\n\n    this.setState({ customerDetails: details })\n\n    axios.post(`${CONSTANTS.API_ROOT}/api/save/` + this.state.customerDetails.data.id, details)\n      .then(() => {\n        this.props.handler();\n      })\n  }\n\n  delete() {\n    axios.delete(`${CONSTANTS.API_ROOT}/api/save/` + this.props.val)\n      .then(() => {\n        this.props.update()\n      })\n  }\n  \n  validate(el) {\n    const properties = (el.name) ? el : el.props\n\n    if (properties.name === 'email') {\n      if (validateEmail(properties.value)) {\n        this.setState({ validate: { email: true }});\n      } else {\n        this.setState({ validate: { email: false }});\n      }\n    }\n  }\n  \n  render() {\n    if (!this.state.customerDetails)\n      return (<p>Loading Data</p>)\n    return (<div className=\"customerdetails\">\n      <Card className=\"centeralign panel panel-info\">\n        <CardHeader className=\"panel-heading\">\n          <CardTitle className=\"panel-title\">{this.state.customerDetails.data.name || ''}</CardTitle>\n        </CardHeader>\n        <CardBody>\n\n          <Form>\n            <FormGroup>\n              <Label>Name:</Label>\n              <Input name=\"name\" type=\"text\" value={this.state.customerDetails.data.name || ''} onChange={this.handleChange} />\n            </FormGroup>\n\n            <FormGroup>\n              <Label>Email:</Label>\n              <Input name=\"email\" valid={ this.state.validate.email === true } invalid={ this.state.validate.email === false }  value={this.state.customerDetails.data.email || ''} onChange={this.handleChange} ref={this.emailRef} />\n            </FormGroup>\n\n            <FormGroup>\n              <Label>Phone:</Label>\n              <Input name=\"phone\" type=\"number\" value={this.state.customerDetails.data.phone || ''} onChange={this.handleChange} />\n            </FormGroup>\n\n            <FormGroup>\n              <Label>City:</Label>\n              <Input name=\"city\" type=\"text\" value={this.state.customerDetails.data.city || ''} onChange={this.handleChange} />\n            </FormGroup>\n\n            <FormGroup>\n              <Label>State:</Label>\n              <Input name=\"state\" type=\"text\" value={this.state.customerDetails.data.state || ''} onChange={this.handleChange} />\n            </FormGroup>\n\n            <FormGroup>\n              <Label>Country:</Label>\n              <Input name=\"country\" type=\"test\" value={this.state.customerDetails.data.country || ''} onChange={this.handleChange} />\n            </FormGroup>\n\n            <FormGroup>\n              <Label>Organization:</Label>\n              <Input name=\"organization\" type=\"test\" value={this.state.customerDetails.data.organization || ''} onChange={this.handleChange} />\n            </FormGroup>\n\n            <FormGroup>\n              <Label>Job Profile:</Label>\n              <Input name=\"jobProfile\" type=\"test\" value={this.state.customerDetails.data.jobProfile || ''} onChange={this.handleChange} />\n            </FormGroup>\n\n            <FormGroup>\n              <Label>Additional Info:</Label>\n              <Input name=\"additionalInfo\" type=\"test\" value={this.state.customerDetails.data.additionalInfo || ''} onChange={this.handleChange} />\n            </FormGroup>\n\n\n            <Button className=\"btn btn-primary\" onClick={this.delete}>Delete</Button>\n          </Form>\n        </CardBody>\n      </Card>\n    </div>)\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, CardBody, CardTitle, CardHeader, Button } from 'reactstrap'\nimport CustomerDetails from './CustomerDetails'\nimport axios from 'axios'\nimport CONSTANTS from \"./constants\"\nconst uuidv4 = require('uuid/v4');\n\nexport default class Customers extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {}\n\n    this.update = this.update.bind(this);\n  }\n\n  //function which is called the first time the component loads\n  componentDidMount() {\n    this.getCustomerData(true);\n  }\n\n  //Function to get the Customer Data from json\n  getCustomerData(initial) {\n    axios.get(`${CONSTANTS.API_ROOT}/api/get`).then(response => {\n      this.setState({\n        customerList: response\n      })\n\n      let customerID\n\n      if (!response.data.length) {\n        customerID = uuidv4()  \n      } else {\n        customerID = response.data[0].id\n      }\n\n      if (initial === true) {\n        this.setState({\n          selectedCustomer: customerID\n        })\n      }\n    })\n  };\n\n  update() {\n    this.getCustomerData(true);\n    this.setState({\n      state: this.state\n    })\n  }\n\n  render() {\n    if (!this.state.customerList)\n      return (<p>Loading data</p>)\n    return (<div>\n      <div className=\"col-md-3\">\n        {\n          this.state.customerList.data.map(customer => <Card className=\"panel panel-info\" key={customer.id}>\n            <CardHeader className=\"panel-heading\">\n              <CardTitle className=\"panel-title\">{customer.name}</CardTitle>\n            </CardHeader>\n            <CardBody className=\"panel-body\">\n              <p>{customer.email}</p>\n              <p>{customer.phone}</p>\n              <Button className=\"btn btn-info\" onClick={() => this.setState({ selectedCustomer: customer.id })}>\n\n                Click to View Details\n\n              </Button>\n            </CardBody>\n          </Card>\n          )\n        }\n\n        <Button className=\"btn btn-info\" onClick={() => this.setState({ selectedCustomer: uuidv4() })}>Add New</Button>\n\n      </div>\n      <div className=\"col-md-6\">\n        <CustomerDetails val={this.state.selectedCustomer} handler={this.getCustomerData.bind(this)} update={this.update} />\n      </div>\n    </div>)\n  }\n}\n","import React, { Component } from 'react'\nimport { Form, FormGroup, Input, Label, Card, CardHeader, CardTitle, CardBody, Button } from \"reactstrap\"\nimport CONSTANTS from \"./constants\"\nimport axios from 'axios'\nconst uuidv4 = require('uuid/v4');\n\n//This Component is a child Component of Customers Component\nexport default class CustomerNew extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.id = uuidv4();\n\n    this.state = {\n      validate: {}\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.validateEmail = this.validateEmail.bind(this);\n  }\n\n  //Function which is called when the component loads for the first time\n  componentDidMount() {\n    this.getCustomerDetails(this.id)\n  }\n\n  //Function which is called whenver the component is updated\n  componentDidUpdate(prevProps) {\n\n    //get Customer Details only if props has changed\n    if (this.props.val !== prevProps.val) {\n      this.getCustomerDetails(this.id)\n    }\n  }\n\n  //Function to Load the customerdetails data from json.\n  getCustomerDetails(id) {\n    axios.get(`${CONSTANTS.API_ROOT}/api/get/${id}`).then(response => {\n      response.data.id = this.id\n      this.setState({ customerDetails: response})\n    })\n  };\n\n  handleChange(event) {\n    const details = this.state.customerDetails;\n\n    details.data[event.target.name] = event.target.value;\n\n    this.setState({ customerDetails: details });\n    console.log(this.state.customerDetails);\n\n    axios.post(`${CONSTANTS.API_ROOT}/api/save/` + details.data.id, details);\n  };\n\n  render() {\n    if (!this.state.customerDetails) {\n      return (<p>Loading Data</p>)\n    }\n\n    return (<div className=\"customerdetails\">\n      <Card className=\"centeralign\">\n        <CardHeader>\n          <CardTitle>{this.state.customerDetails.data.name || ''}</CardTitle>\n        </CardHeader>\n        <CardBody>\n\n          <Form>\n            <FormGroup>\n              <Label>Name:</Label>\n              <Input name=\"name\" type=\"text\" value={this.state.customerDetails.data.name || ''} onChange={this.handleChange} />\n            </FormGroup>\n\n            <FormGroup>\n              <Label>Email:</Label>\n              <Input\n                name=\"email\"\n                type=\"email\"\n                value={this.state.customerDetails.data.email || ''}\n                onChange={this.handleChange}\n                valid={this.state.validate.emailState && this.state.validate.emailState === 'has-success'}\n                invalid={this.state.validate.emailState && this.state.validate.emailState === 'has-danger'}\n                onBlur={this.validateEmail}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <Label>Phone:</Label>\n              <Input name=\"phone\" type=\"number\" value={this.state.customerDetails.data.phone || ''} onChange={this.handleChange} />\n            </FormGroup>\n\n            <FormGroup>\n              <Label>City:</Label>\n              <Input name=\"city\" type=\"text\" value={this.state.customerDetails.data.city || ''} onChange={this.handleChange} />\n            </FormGroup>\n\n            <FormGroup>\n              <Label>State:</Label>\n              <Input name=\"state\" type=\"text\" value={this.state.customerDetails.data.state || ''} onChange={this.handleChange} />\n            </FormGroup>\n\n            <FormGroup>\n              <Label>Country:</Label>\n              <Input name=\"country\" type=\"text\" value={this.state.customerDetails.data.country || ''} onChange={this.handleChange} />\n            </FormGroup>\n\n            <FormGroup>\n              <Label>Organization:</Label>\n              <Input name=\"organization\" type=\"text\" value={this.state.customerDetails.data.organization || ''} onChange={this.handleChange} />\n            </FormGroup>\n\n            <FormGroup>\n              <Label>Job Profile:</Label>\n              <Input name=\"jobProfile\" type=\"text\" value={this.state.customerDetails.data.jobProfile || ''} onChange={this.handleChange} />\n            </FormGroup>\n\n            <FormGroup>\n              <Label>Additional Info:</Label>\n              <Input name=\"additionalInfo\" type=\"text\" value={this.state.customerDetails.data.additionalInfo || ''} onChange={this.handleChange} />\n            </FormGroup>\n\n            <Button href=\"/customer/list\" className=\"btn btn-primary\">Save and Return</Button>\n          </Form>\n        </CardBody>\n      </Card>\n    </div>)\n  }\n}\n\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Customers from './Customers'\nimport CustomerNew from './CustomerNew'\nimport { BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n    return (\n\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\">Customers</h1>\n        </header>\n          <Switch>\n                <Route exact path= \"/\" render={() => (\n                  <Redirect to=\"/customer/list\"/>\n                )}/>\n                 <Route exact path='/customer/' component={Customers} />\n                 <Route exact path='/customer/list' component={Customers} />\n                 <Route exact path='/customer/new' component={CustomerNew} />\n          </Switch>\n      </div>\n    </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap-theme.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}